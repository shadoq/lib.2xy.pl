{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_20287.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"#define MAX_ITER 4\nvoid main( void ) {\n\n    vec2 surfacePosition = -1.0 + 2.0 * gl_FragCoord.xy / iResolution.xy;\n    surfacePosition.x *= iResolution.x / iResolution.y;\n        \n    vec2 sp = surfacePosition;//vec2(.4, .7);\n    vec2 p = sp*5.0 - vec2(125.0);\n    vec2 i = p;\n    float c = 1.0;\n    \n    float inten = 0.01;\n\n    for (int n = 0; n < MAX_ITER; n++) \n    {\n        float t = iTime* (1.0 - (3.0 / float(n+1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n    }\n    c /= float(MAX_ITER);\n    c = 1.5-sqrt(c);\n    gl_FragColor = vec4(vec3(c*c*c*c), 999.0) + vec4(0.0, 0.3, 0.5, 1.0);\n\n}"}