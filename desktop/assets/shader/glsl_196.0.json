{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_196.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"// by @mnstrmnch\n\n\nfloat barWidth = 0.05;\nfloat PI = 3.14159265;\n\nvec3 c0 = vec3( 255.0, 215.0, 0.0 ) / vec3( 255.0 );\nvec3 c1 = vec3( 1.0, 0.0, 0.0 );\n\nvoid main( void ) \n{\n    vec2 p = ( gl_FragCoord.xy / iResolution.xx ) * 2.0 - vec2( 1.0, iResolution.y / iResolution.x );\n\n    vec3 color = vec3( 0.0 );\n\n    for( int i = 23; i >= 0; i-- )\n    {\n        float barY = sin( iTime * 1.324 + float( i ) * 0.1 + p.x ) * 0.33 + sin( iTime * 1.194 + p.x * 0.5 ) * 0.1;\n\n        if( p.y > barY - barWidth * 0.5 && p.y < barY + barWidth * 0.5 )\n        {\n            float angle = ( ( p.y - ( barY - barWidth * 0.5 ) ) / barWidth );\n            color = mix( c0.zyx, c1.zyx, float( i ) / 23.0 ) * vec3( sin( angle * PI ) );\n        }\n    }\n\n    for( int i = 47; i >= 0; i-- )\n    {\n        float barX = sin( iTime * 1.1347 + float( i ) * 0.1 + p.y * 0.25 ) * 0.25 + sin( iTime * 1. + float( i ) * 0.1 ) * 0.25;\n\n        if( p.y < ( float( i ) / 47.0 ) * 2.0 - 1.0  && p.x > barX - barWidth * 0.5 && p.x < barX + barWidth * 0.5 )\n        {\n            float angle = ( ( p.x - ( barX - barWidth * 0.5 ) ) / barWidth );\n            color = mix( c0, c1, float( i ) / 47.0 ) * vec3( sin( angle * PI ) );\n        }\n    }\n\n\n    gl_FragColor = vec4( color, 1.0 );\n\n}"}