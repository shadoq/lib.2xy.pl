{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_20012.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"uniform sampler2D backbuffer;\n\n#define PIXELSIZE 3.0\n\nconst int num_x = 5;\nconst int num_y = 5;\nfloat w = iResolution.x;\nfloat h = iResolution.y;\n \nvec4 draw_ball(int i, int j) {\n    float t = iTime;\n    float x = w/5.0 * (1.0 + cos(1.5 * t + float(3*i+4*j)));\n    float y = h/2.0 * (1.0 + sin(2.3 * t + float(3*i+4*j)));\n    float size = 3.0 - 2.0 * sin(t);\n    vec2 pos = vec2(x, y);\n    float dist = length(gl_FragCoord.xy - pos);\n    float intensity = pow(size/dist, 2.0);\n    vec4 color = vec4(0.0);\n    color.r = 0.5 + cos(t*float(i));\n    color.g = 0.5 + sin(t*float(j));\n    color.b = 0.5 + sin(float(j));\n    return color*intensity;\n}\n\n// from http://tips.hecomi.com/entry/20130323/1364046980\nvoid func1() {\n    vec4 color = vec4(0.0);\n    for (int i = 0; i < num_x; ++i) {\n        for (int j = 0; j < num_y; ++j) {\n            color += draw_ball(i, j);\n        }\n    }\n    vec2 texPos = vec2(gl_FragCoord.xy/iResolution);\n    vec4 shadow = texture2D(backbuffer, texPos)*0.7;\n    gl_FragColor = color + shadow;\n}\n\n// from https://www.shadertoy.com/view/XsfGDl\nvoid func2() {\n    vec2 cor;\n    \n    cor.x =  gl_FragCoord.x/PIXELSIZE;\n    cor.y = (gl_FragCoord.y+PIXELSIZE*1.5*mod(floor(cor.x),2.0))/(PIXELSIZE*3.0);\n    \n    vec2 ico = floor( cor );\n    vec2 fco = fract( cor );\n    \n    vec3 pix = step( 1.5, mod( vec3(0.0,1.0,2.0) + ico.x, 3.0 ) );\n    vec3 ima = texture2D( backbuffer,PIXELSIZE*ico*vec2(1.0,3.0)/iResolution.xy ).xyz;\n    \n    vec3 col = pix*dot( pix, ima );\n\n    col *= step( abs(fco.x-0.5), 0.4 );\n    col *= step( abs(fco.y-0.5), 0.4 );\n    \n    col *= 1.2;\n    gl_FragColor += vec4( col, 1.0 );\n}\n\nvoid main() {\n    func1();\n    func2();\n}"}