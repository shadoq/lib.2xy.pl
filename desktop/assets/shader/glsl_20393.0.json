{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_20393.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"//created by mewbillilulami\n\nconst float VELOCITY        = 10.0  ;           // speed of lines [ 0.5  .. 1.5  ] =  1.0\nconst float HEIGHT          = 0.5    ;           // height of the lines  [ 0    .. 1.0  ] =  0.5\nconst float FREQUENCY       = 32.5 ;           // frequency  [ 1.0  .. 14.0 ] =  9.0\nconst float AMPLITUDE       = 0.3 ;           // amplitude  [ 0.1  .. 0.5  ] =  0.2\nconst int   NUMBER          = 10    ;           // lines      [ 0    .. 20   ] = 10.0\nconst float INVERSE         = 1.0 / float(10);  // inverse\n\nvoid main()\n{\n   vec3 col = vec3( 1.);\n   \n   float rColMod;\n   float gColMod;\n   float bColMod;\n   \n   float offset;\n   float t;\n   \n   float color;\n   float colora;\n   \n   float tsin;\n           \n   for (int i = 0; i < NUMBER; ++i)\n   {\n      vec2 pos= gl_FragCoord.xy/iResolution.xy;\n      \n      offset = float(i) * INVERSE;\n            \n      t      = iTime + VELOCITY *(offset * offset * 2.);\n      \n      tsin   = sin( t +pos.y*33.);\n      \n      pos.y -= HEIGHT;\n      pos.y+=sin(pos.x * FREQUENCY + t ) * AMPLITUDE * tsin;\n      \n      color  = 1.0 - pow( abs( pos.y) , 0.2 );\n      colora = pow( 1. , 0.2 * abs( pos.y ) );\n      \n      rColMod = (2. - (offset * .5) + .5) * colora ;\n      gColMod = ((offset * .5) + .65) * colora ;\n      bColMod = ((offset * .5) + .35) * colora ;\n           \n      col -= exp(color) *color* INVERSE * vec3( mix(rColMod, gColMod, tsin), mix(gColMod, bColMod, tsin) , sin(bColMod*rColMod*tsin)*mix(bColMod, rColMod, tsin)) ;      \n   }\n   \n   gl_FragColor=vec4(col.x, col.y, col.y ,1.0);\n     \n}\n"}