{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_20251.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"// makePoint( x: positionX, y: positionY, fx: frequencyX, fy: frequencyY, sx: distX, sy: distY, t: time, s: width )\nfloat makePoint(float x,float y,float fx,float fy,float sx,float sy,float t, float s)\n{\n   return ((s/sqrt(x*x+y*y)));\n}\n\nvec3 gu(vec4 a,vec4 b,float f)\n{\n  return mix(a.xyz,b.xyz,(f-a.w)*(1.0/(b.w-a.w)));\n}\n\nvec3 grad(float f)\n{\n    // vec4( r, g, b, distance )\n    vec4 c01=vec4(0.0,0.0,0.0,0.00);\n    vec4 c02=vec4(0.5,0.0,0.0,0.50);\n    vec4 c03=vec4(1.0,0.0,0.0,0.55);\n    vec4 c04=vec4(1.0,1.0,0.0,0.80);\n    vec4 c05=vec4(1.0,1.0,1.0,1.00);\n    return (f<c02.w)?gu(c01,c02,f):\n    (f<c03.w)?gu(c02,c03,f):\n    (f<c04.w)?gu(c03,c04,f):\n    gu(c04,c05,f);\n}\n\nvoid main( void ) \n{\n   vec2 p=(gl_FragCoord.xy/iResolution.x)*2.0-vec2(1.0,iResolution.y/iResolution.x);\n   \n    p = p*2.0;\n    \n    \n    float x = 0.0;\n    float y = p.y + cos(iTime+(p.x*p.x)*sin(iTime*-0.5));\n\n    \n   float a=makePoint(x,y,0.3,1.0,0.4,0.4,iTime,1.0);\n   vec3 a1=grad(a/10.0);\n   \n   gl_FragColor = vec4(a1.x,a1.y,a1.z,1.0);\n}"}