{class:mobi.shad.s3lib.gfx.g3d.shaders.SimpleShader$ShaderData,name:glsl_19867.0,type:null,id:null,date:null,author:null,description:null,tags:null,color:false,normal:false,textures:0,vertex:"void main(){\n\tgl_Position = projectionMatrix * modelViewMatrix * a_position;\n}",fragment:"void main( void ) {\n\n    vec3 col = vec3(0.0);\n    for (int i=0; i<3; i++)\n    {\n        vec2 p = gl_FragCoord.xy / iResolution.x - vec2(0.5, 0.5 * iResolution.y / iResolution.x) + vec2(sin(float(i*i) + 0.5*iTime), sin(float(i*i*i) + 0.8*iTime)) * 0.25;\n        float l = length(p);\n        float a = atan(p.y, p.x);\n    \n        col.x += pow(1.0 - l, 2.0) + sin(a * 15.0 + 2.0 * iTime + sin(a * 7.0 + 13.0 * iTime) * 0.1) * 0.2 + sin(a * 3.0 +7.0 * iTime) * 0.4;\n    \n        col.y += col.x * (sin(col.x) * 0.5 + 0.5);\n        if (col.x < 0.0) col.y = -col.x;\n        col.z += 0.25;\n        col *= 0.5;\n\n        col.x = pow (col.y, sin(float(i*i) + 2.5 * iTime)* 0.5 + 1.5);\n        col.y = pow (col.y, sin(float(i*i*i) + 4.3 * iTime) * 0.5 + 1.5);\n        col.z = pow (col.z, sin(float(i*i*i*i) + 3.2 * iTime) * 0.5 + 1.5);\n    }\n    gl_FragColor = vec4(col, 1.0);\n\n}"}